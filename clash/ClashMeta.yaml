# mihomo内核客户端使用
# 机场订阅，订阅1,订阅2 可以自定名字

proxy-providers:
  订阅1:
    type: http
    interval: 86400
    path: ./proxy_provider/Providers1.yaml
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 300
    proxy: DIRECT
    url: "订阅链接1"
    override:
      additional-prefix: "[机场名称1]"
      skip-cert-verify: true  # 绕过证书验证
      udp: true # 开启udp
  订阅2:
    type: http
    interval: 86400
    path: ./proxy_provider/Providers2.yaml
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 300
    proxy: DIRECT
    url: "订阅链接2"
    override:
      additional-prefix: "[机场名称2]"
      skip-cert-verify: true  # 绕过证书验证
      udp: true # 开启udp
      
# 用于下载订阅时指定UA
global-ua: clash.meta
    
# 全局配置
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
ipv6: false
allow-lan: true      # 局域网连接：允许其他设备经过本机代理
unified-delay: true   # 统一延迟：统一显示节点延迟
tcp-concurrent: true    # TCP并发：允许并发连接TCP,提高并发性能
# interface-name: eth0  （路由器下根据情况指定出站接口）
authentication:
#  - name:passwd
  
geodata-mode: false   # GEO模式：true使用geoip.dat数据库,false使用mmdb数据库
# GEO 文件加载模式（standard：标准加载器/memconservative：专为内存受限 (小内存) 设备优化的加载器 (默认值)）
geodata-loader: standard
geo-auto-update: true  # 是否自动更新 geodata
geo-update-interval: 48  # 更新间隔，单位：小时
geox-url:
  geosite: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.metadb"
  geoip: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  asn: "https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/GeoLite2-ASN.mmdb"
  
# 控制面板
external-controller: 0.0.0.0:9090  # RESTful API 监听地址
# secret: ""
# external-ui: ui
# external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"
# 下载面板地址可更换：https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip

# 匹配进程 always/strict/off
find-process-mode: strict
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 30

# 策略组选择和fakeip缓存
profile:
  store-selected: true
  store-fake-ip: true
  
# 流量嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com
  skip-domain:
    - "Mijia Cloud"
    - "dlg.io.mi.com"
    - "+.push.apple.com"
    - "+.apple.com"
    - '+.wechat.com'
    - '+.qpic.cn'
    - '+.qq.com'
    - '+.wechatapp.com'
    
# 代理模式
tun:
  enable: true
  stack: mixed
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true
  
# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  prefer-h3: true # 是否开启 DoH 支持 HTTP/3，将并发尝试
  respect-rules: true
  # 模式切换 redir-host / fake-ip
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  # 模式切换 whitelist/blacklist 
  # 黑名单模式表示如果匹配成功则不返回 Fake-IP, 白名单模式时只有匹配成功才返回 Fake-IP
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:LocalAreaNetwork,UnBan,GoogleCN,SteamCN,ChinaDomain,Download"
    - "+.services.googleapis.cn"
    - "+.xn--ngstr-lra8j.com"
    - "time.*.com"
    - "+.pool.ntp.org"
    - "+.ntp.tencent.com"
    - "+.ntp1.aliyun.com"
    - "+.ntp.ntsc.ac.cn"
    - "+.cn.ntp.org.cn"
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  proxy-server-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  nameserver:
    - 223.5.5.5
    - 119.29.29.29


# 策略组锚点
pr1: &pr1 {type: select, proxies: [DIRECT, 🚀 节点选择, 🇺🇸 美国节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🚀 手动切换]}
pr2: &pr2 {type: select, proxies: [🚀 节点选择, ♻️ 自动选择, 🇸🇬 狮城节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇯🇵 日本节点, 🇺🇸 美国节点, 🇰🇷 韩国节点, 🚀 手动切换, DIRECT]}

# 代理组锚点
UrlTest: &UrlTest {type: url-test, interval: 300, tolerance: 20, url: 'http://www.gstatic.com/generate_204', disable-udp: false, timeout: 2000, max-failed-times: 3, include-all-providers: true}
FallBack: &FallBack {type: fallback, interval: 300, lazy: true, url: 'http://www.gstatic.com/generate_204', disable-udp: false, timeout: 2000, max-failed-times: 3, include-all-providers: true}
LoadBalance: &LoadBalance {type: load-balance, interval: 300, lazy: true, url: 'http://www.gstatic.com/generate_204', disable-udp: false, strategy: consistent-hashing, timeout: 2000, max-failed-times: 3, include-all-providers: true}

# 节点筛选锚点
HK: &HK '(?i)(港|HK|hk|Hong Kong|HongKong|hongkong)'
JP: &JP '(?i)(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan)'
TW: &TW '(?i)(台|新北|彰化|TW|Taiwan)'
US: &US '(?i)(美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States)'
SG: &SG '(?i)(新加坡|坡|狮城|SG|Singapore)'
KR: &KR '(?i)(KR|Korea|KOR|首尔|韩|韓)'

# 策略组
proxy-groups:
  - {name: 🚀 节点选择, type: select, proxies: [♻️ 自动选择, 🔯 故障转移, 🔮 负载均衡, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇸 美国节点, 🇰🇷 韩国节点, 🚀 手动切换, DIRECT]}
  - {name: 🚀 手动切换, type: select, include-all: true}
  - {name: ♻️ 自动选择, <<: *UrlTest}
  - {name: 🔯 故障转移, <<: *FallBack}
  - {name: 🔮 负载均衡, <<: *LoadBalance}
  - {name: 📲 电报消息, <<: *pr2}
  - {name: 💬 OpenAi, <<: *pr2}
  - {name: 📹 油管视频, <<: *pr2}
  - {name: 🎥 奈飞视频, <<: *pr2}
  - {name: 📺 巴哈姆特, type: select, proxies: [🇨🇳 台湾节点, 🚀 节点选择, 🚀 手动切换, DIRECT]}
  - {name: 📺 哔哩哔哩, type: select, proxies: [🎯 全球直连, 🇨🇳 台湾节点, 🇭🇰 香港节点]}
  - {name: 🌍 国外媒体, <<: *pr2}
  - {name: 🌏 国内媒体, type: select, proxies: [DIRECT, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🚀 手动切换]}
  - {name: 📢 谷歌FCM, <<: *pr1}
  - {name: Ⓜ️ 微软Bing, <<: *pr1}
  - {name: Ⓜ️ 微软云盘, <<: *pr1}
  - {name: Ⓜ️ 微软服务, <<: *pr1}
  - {name: 🍎 苹果服务, <<: *pr1}
  - {name: 🎮 游戏平台, <<: *pr1}
  - {name: 🎯 全球直连, type: select, proxies: [DIRECT, 🚀 手动切换, ♻️ 自动选择]}
  - {name: 🛑 广告拦截, type: select, proxies: [REJECT, DIRECT]}
  - {name: 🍃 应用净化, type: select, proxies: [REJECT, DIRECT]}
  - {name: 🐟 漏网之鱼, <<: *pr2}
  - {name: 🇭🇰 香港节点, <<: *UrlTest, filter: *HK}
  - {name: 🇯🇵 日本节点, <<: *UrlTest, filter: *JP}
  - {name: 🇺🇸 美国节点, <<: *UrlTest, filter: *US}
  - {name: 🇨🇳 台湾节点, <<: *UrlTest, filter: *TW}
  - {name: 🇸🇬 狮城节点, <<: *UrlTest, filter: *SG}
  - {name: 🇰🇷 韩国节点, <<: *UrlTest, filter: *KR}
rules: 
  - RULE-SET,LocalAreaNetwork,🎯 全球直连
  - RULE-SET,UnBan,🎯 全球直连
  - RULE-SET,BanAD,🛑 广告拦截
  - RULE-SET,BanProgramAD,🍃 应用净化
  - RULE-SET,GoogleFCM,📢 谷歌FCM
  - RULE-SET,GoogleCN,🎯 全球直连
  - RULE-SET,SteamCN,🎯 全球直连
  - RULE-SET,Bing,Ⓜ️ 微软Bing
  - RULE-SET,OneDrive,Ⓜ️ 微软云盘
  - RULE-SET,Microsoft,Ⓜ️ 微软服务
  - RULE-SET,Apple,🍎 苹果服务
  - RULE-SET,Telegram,📲 电报消息
  - RULE-SET,OpenAi,💬 OpenAi
  - RULE-SET,Epic,🎮 游戏平台
  - RULE-SET,Origin,🎮 游戏平台
  - RULE-SET,Sony,🎮 游戏平台
  - RULE-SET,Steam,🎮 游戏平台
  - RULE-SET,Nintendo,🎮 游戏平台
  - RULE-SET,YouTube,📹 油管视频
  - RULE-SET,Netflix,🎥 奈飞视频
  - RULE-SET,Bahamut,📺 巴哈姆特
  - RULE-SET,BilibiliHMT,📺 哔哩哔哩
  - RULE-SET,Bilibili,📺 哔哩哔哩
  - RULE-SET,ChinaMedia,🌏 国内媒体
  - RULE-SET,ProxyMedia,🌍 国外媒体
  - RULE-SET,ProxyGFWlist,🚀 节点选择
  - RULE-SET,ChinaDomain,🎯 全球直连
  - RULE-SET,ChinaCompanyIp,🎯 全球直连
  - RULE-SET,Download,🎯 全球直连
  - GEOIP,CN,🎯 全球直连
  - MATCH,🐟 漏网之鱼
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  # 全球直连
  LocalAreaNetwork:
    <<: *class
    path: ./ruleset/LocalAreaNetwork.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/LocalAreaNetwork.list
  UnBan:
    <<: *class
    path: ./ruleset/UnBan.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/UnBan.list

  # 广告拦截
  BanAD:
    <<: *class
    path: ./ruleset/BanAD.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanAD.list

  # 应用净化
  BanProgramAD:
    <<: *class
    path: ./ruleset/BanProgramAD.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanProgramAD.list

  # GoogleFCM
  GoogleFCM:
    <<: *class
    path: ./ruleset/GoogleFCM.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/GoogleFCM.list

  # 全球直连
  GoogleCN:
    <<: *class
    path: ./ruleset/GoogleCN.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/GoogleCN.list
  SteamCN:
    <<: *class
    path: ./ruleset/SteamCN.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/SteamCN.list

  # 微软
  Bing:
    <<: *class
    path: ./ruleset/Bing.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Bing.list
  OneDrive:
    <<: *class
    path: ./ruleset/OneDrive.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/OneDrive.list
  Microsoft:
    <<: *class
    path: ./ruleset/Microsoft.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Microsoft.list

  # Apple
  Apple:
    <<: *class
    path: ./ruleset/Apple.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Apple.list

  # Telegram
  Telegram:
    <<: *class
    path: ./ruleset/Telegram.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Telegram.list

  # OpenAI
  OpenAi:
    <<: *class
    path: ./ruleset/OpenAi.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/OpenAi.list

  # 游戏
  Epic:
    <<: *class
    path: ./ruleset/Epic.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Epic.list
  Origin:
    <<: *class
    path: ./ruleset/Origin.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Origin.list
  Sony:
    <<: *class
    path: ./ruleset/Sony.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Sony.list
  Steam:
    <<: *class
    path: ./ruleset/Steam.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Steam.list
  Nintendo:
    <<: *class
    path: ./ruleset/Nintendo.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Nintendo.list

  # 视频平台
  YouTube:
    <<: *class
    path: ./ruleset/YouTube.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/YouTube.list
  Netflix:
    <<: *class
    path: ./ruleset/Netflix.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Netflix.list
  Bahamut:
    <<: *class
    path: ./ruleset/Bahamut.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Bahamut.list
  BilibiliHMT:
    <<: *class
    path: ./ruleset/BilibiliHMT.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/BilibiliHMT.list
  Bilibili:
    <<: *class
    path: ./ruleset/Bilibili.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Bilibili.list

  # 国内媒体
  ChinaMedia:
    <<: *class
    path: ./ruleset/ChinaMedia.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaMedia.list

  # 国外媒体
  ProxyMedia:
    <<: *class
    path: ./ruleset/ProxyMedia.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyMedia.list

  # 节点选择
  ProxyGFWlist:
    <<: *class
    path: ./ruleset/ProxyGFWlist.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list

  # 全球直连
  ChinaDomain:
    <<: *class
    path: ./ruleset/ChinaDomain.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaDomain.list
  ChinaCompanyIp:
    <<: *class
    path: ./ruleset/ChinaCompanyIp.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaCompanyIp.list
  Download:
    <<: *class
    path: ./ruleset/Download.list
    url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Download.list
